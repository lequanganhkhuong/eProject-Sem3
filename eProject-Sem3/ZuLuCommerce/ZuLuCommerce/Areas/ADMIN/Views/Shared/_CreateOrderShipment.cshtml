@model ZuLuCommerce.Models.Shipment

<div class="modal-header">
    <h4 class="modal-title" id="myModalLabel">Create shipment</h4>
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
</div>
<div class="modal-body">


    @using (Html.BeginForm("CreateShipment", "Orders", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <input type="text" name="orderid" hidden id="orderid"/>
            <div class="form-group">
                @Html.HiddenFor(model => model.ShippedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.HiddenFor(model => model.ShippedDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShippedDate, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.HiddenFor(model => model.StatusId, "Status")
                <div class="col-md-10">
                    
                    @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                </div>
            </div>

            

            <div class="form-group">
                @Html.LabelFor(model => model.ShippingAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShippingAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShippingAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShippingCity, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShippingCity, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShippingCity, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShippingFee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShippingFee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ShippingFee, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ShipperId, "ShipperId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ShipperId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ShipperId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button class="btn btn-default" type="submit" id="Create">Create</button>
                </div>
            </div>
        </div>
    }

</div>
<div class="modal-footer">
    <p style="color:red">@ViewBag.Message</p>
    <button type="button" class="btn btn-info waves-effect" data-dismiss="modal">Close</button>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
