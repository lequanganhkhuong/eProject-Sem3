@model ZuLuCommerce.Models.Employee
@using ZuLuCommerce.Models

@{
    ViewBag.Title = Model.FirstName + "'s Profile";
}

<div class="row">
    <!-- Profile Image -->
    <div class="col-xl-3 col-12">
        <div class="box bg-dark">
            <div class="box-body box-profile">
                @{
                    var src = "/Uploads/default-avatar.jpg";
                    if (Model.Avatar != null && !Model.Avatar.Equals("") && File.Exists(Server.MapPath("~/Uploads/Employees/" + Model.Id + "/" + Model.Avatar)))
                    {
                        src = "/Uploads/Employees/" + Model.Id + "/" + Model.Avatar;
                    } 
                }

                 <img class="profile-user-img rounded-circle img-fluid mx-auto d-block" src="@src" alt="User profile picture">
                 <h3 class="profile-username text-center">@Model.FirstName @Model.LastName</h3>

                <p class="text-center">@Model.Level.LevelName</p>

                <div class="row">
                    <div class="col-12">
                        <div class="profile-user-info">
                            <p style="font-weight:bolder;font-size:30px" class="text-white">Email address </p>
                            <h6 class="margin-bottom">@Model.Email</h6>
                            <p style="font-weight:bolder;font-size:30px" class="text-white">Phone</p>
                            <h6 class="margin-bottom">@Model.Phone</h6>
                            <p style="font-weight:bolder;font-size:30px" class="text-white">Address</p>
                            <h6 class="margin-bottom">@Model.Address</h6>
                            <p style="font-weight:bolder;font-size:30px" class="text-white">Birthday</p>
                            <h6 class="margin-bottom">@Model.Birthday.ToString("dd/MM/yyyy")</h6>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
    </div>
    <div class="col-xl-9 col-12">
      <div class="box" style="padding:15px">
          @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
          {
              @Html.AntiForgeryToken()

              <div class="form-horizontal">
                  <h4>Employee</h4><a href=@Url.Action("ChangePassword", "Employees", new { id=Model.Id}) class="btn btn-success">Change your password</a>
                  <hr />
                  @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                  @Html.HiddenFor(model => model.Id)

              

                  <div class="form-group">
                      @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                      </div>
                  </div>

                 

                  <div class="form-group">
                      @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                      </div>
                  </div>


                

              

                  <div class="form-group">
                      @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.Avatar, new { htmlAttributes = new { @class = "form-control" ,@disabled = "disabled"} })
                          @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                          <div>
                              @if (Model.Avatar != null)
                              {
                                  <img id="thumbnail" style="border:1px solid black; margin:10px 0 10px 0;height:200px" src="~/Uploads/Employees/@Model.Id/@Model.Avatar" />
                              }
                          </div>
                      </div>
                  </div>
                  <div class="form-group">
                      @Html.Label("Add Images", htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          <input style="border:none" type="file" name="pictures" />
                      </div>
                  </div>
                 
             

                  <div class="form-group">
                      <div class="col-md-offset-2 col-md-10">
                          <input type="submit" value="Save" class="btn btn-default" />
                      </div>
                  </div>
                  




                  <div class="form-group">
                      @Html.HiddenFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.HiddenFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                      </div>
                  </div>
                  <div class="form-group">
                      @Html.HiddenFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          <div class="checkbox">
                              @Html.HiddenFor(model => model.IsActive)
                              @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.HiddenFor(model => model.IsOnline, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          <div class="checkbox">
                              @Html.HiddenFor(model => model.IsOnline)
                              @Html.ValidationMessageFor(model => model.IsOnline, "", new { @class = "text-danger" })
                          </div>
                      </div>
                  </div>
                  <div class="form-group">
                      @Html.HiddenFor(model => model.LastLogin, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.LastLogin, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.LastLogin, "", new { @class = "text-danger" })
                      </div>
                  </div>
                  <div class="form-group">
                      @Html.HiddenFor(model => model.LevelId, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.LevelId)
                          @Html.ValidationMessageFor(model => model.LevelId, "", new { @class = "text-danger" })
                      </div>
                  </div>
                  <div class="form-group">
                      @Html.HiddenFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.HiddenFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                      </div>
                  </div>

                  <div class="form-group">
                      @Html.HiddenFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                      </div>
                  </div>
                  <div class="form-group">
                      @Html.HiddenFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                      <div class="col-md-10">
                          @Html.HiddenFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                          @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                      </div>
                  </div>
              </div>
          }

      </div>
    </div>
</div>
