@using ZuLuCommerce.Models
@{
    ViewBag.Title = "Products";
    eCommerceEntities db = new eCommerceEntities();
    var suppliertotalsale = ViewBag.supplierTotalsale as IEnumerable<decimal>;
    var saleSupplierThisMonth =  ViewBag.saleSupplierThisMonth as IEnumerable<decimal>;
    var saleSupplierLastMonth =  ViewBag.saleSupplierLastMonth as IEnumerable<decimal>;
    var supproduct = db.OrderDetails.GroupBy(x => x.Product.Supplier.Name)
                 .Select(x => new
                 {
                     sup = x.Key,
                     Count = x.Count()
                 }).OrderByDescending(x => x.Count);
    var bestProducts = ViewBag.bestProducts as List<Tuple<int, string, decimal, int>>;
    var worstProducts = ViewBag.worstProducts as List<Tuple<int, string, decimal, int>>;
}

<h2>Products</h2>
<div class="box">
    <div class="row">
        <div class="col-md-6 col-6 col-xl-6">
            <h2 style="text-align:center">Supplier sale</h2>
            <canvas id="suppliersale"></canvas>
        </div>
        <div class="col-md-6 col-6 col-xl-6">
            <h2 style="text-align:center">Supplier products</h2>
            <canvas id="supplierproducts"></canvas>
        </div>
        <div class="col-md-6 col-6 col-xl-6">
            <h2 style="text-align:center">This month sale each supplier</h2>
            <canvas id="suppliersalethismonth"></canvas>
        </div>
        <div class="col-md-6 col-6 col-xl-6">
            <h2 style="text-align:center">Last month sale each supplier</h2>
            <canvas id="suppliersalelastmonth"></canvas>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 col-6 col-xl-6" style="border-left:1px solid black">
            <h2 style="text-align:center">Top 10 bestselling products</h2>
            <table class="table table-hover table-hover">
                <thead>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Total order
                        </th>
                        <th>
                            Total payment
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var h in bestProducts.OrderByDescending(x => x.Item3))
                    {
                        <tr>
                            <td>
                                @h.Item2
                            </td>
                            <td>
                                @h.Item4
                            </td>
                            <td>
                                @h.Item3.ToString("N0") VND
                            </td>
                            <td>
                                <a href=@Url.Action("Details","Products",new { id = h.Item1})>View details</a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
        <div class="col-md-6 col-6 col-xl-6" style="border-left:1px solid black">
            <h2 style="text-align:center">Top 10 least sale products</h2>
            <table class="table table-hover table-hover">
                <thead>
                    <tr>
                        <th>
                            Name
                        </th>
                        <th>
                            Total order
                        </th>
                        <th>
                            Total payment
                        </th>
                        <th>
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var h in worstProducts.OrderBy(x => x.Item3))
                    {
                        <tr>
                            <td>
                                @h.Item2
                            </td>
                            <td>
                                @h.Item4
                            </td>
                            <td>
                                @h.Item3.ToString("N0") VND
                            </td>
                            <td>
                                <a href=@Url.Action("Details","Products",new { id = h.Item1})>View details</a>
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>
    <script>
        var colors = ['aqua', 'black', 'lime', 'blue', 'fuchsia', 'gray', 'green',
            'maroon', 'navy', 'olive', 'orange', 'purple', 'red',
            'silver', 'teal', 'white', 'yellow', 'skyblue', 'lightgreen'];
        function loadSuppliersProducts() {
                var data = [];
                var labels = [];

                var chartcolor = [];
                for (var i = 0; i < @supproduct.Count(); i++) {
                    chartcolor[i] = colors[i];
                }

                @foreach (var d in supproduct)
                {
                    @:data.push("@d.Count");
                }
                @foreach (var d in supproduct)
                {
                    @:labels.push("@d.sup");
                }
                var ctx = document.getElementById('supplierproducts').getContext('2d');
                var chart = new Chart(ctx, {
                    // The type of chart we want to create
                    type: 'bar',

                    // The data for our dataset
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "",
                            backgroundColor: chartcolor,
                            borderColor: 'black',
                            data: data,
                        }]
                    },

                    // Configuration options go here
                    options: {}
                });
        }
        function loadSuppliersTotalSale() {
                var data = [];
                var labels = [];

                var chartcolor = [];
                for (var i = 0; i < @supproduct.Count(); i++) {
                    chartcolor[i] = colors[i];
                }

                @foreach (var d in suppliertotalsale)
                {
                    @:data.push("@d");
                }
                @foreach (var d in supproduct)
                {
                    @:labels.push("@d.sup");
                }
                var ctx = document.getElementById('suppliersale').getContext('2d');
                var chart = new Chart(ctx, {
                    // The type of chart we want to create
                    type: 'bar',

                    // The data for our dataset
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "",
                            backgroundColor: chartcolor,
                            borderColor: 'black',
                            data: data,
                        }]
                    },

                    // Configuration options go here
                    options: {}
                });
        }
        function loadSuppliersSaleThisMonth() {
                var data = [];
                var labels = [];

                var chartcolor = [];
                for (var i = 0; i < @supproduct.Count(); i++) {
                    chartcolor[i] = colors[i];
                }

                @foreach (var d in saleSupplierThisMonth)
                {
                    @:data.push("@d");
                }
                @foreach (var d in supproduct)
                {
                    @:labels.push("@d.sup");
                }
                var ctx = document.getElementById('suppliersalethismonth').getContext('2d');
                var chart = new Chart(ctx, {
                    // The type of chart we want to create
                    type: 'bar',

                    // The data for our dataset
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "",
                            backgroundColor: chartcolor,
                            borderColor: 'black',
                            data: data,
                        }]
                    },

                    // Configuration options go here
                    options: {}
                });
        }
        function loadSuppliersSaleLastMonth() {
                var data = [];
                var labels = [];

                var chartcolor = [];
                for (var i = 0; i < @supproduct.Count(); i++) {
                    chartcolor[i] = colors[i];
                }

                @foreach (var d in saleSupplierLastMonth)
                {
                    @:data.push("@d");
                }
                @foreach (var d in supproduct)
                {
                    @:labels.push("@d.sup");
                }
                var ctx = document.getElementById('suppliersalelastmonth').getContext('2d');
                var chart = new Chart(ctx, {
                    // The type of chart we want to create
                    type: 'bar',

                    // The data for our dataset
                    data: {
                        labels: labels,
                        datasets: [{
                            label: "",
                            backgroundColor: chartcolor,
                            borderColor: 'black',
                            data: data,
                        }]
                    },

                    // Configuration options go here
                    options: {}
                });
        }
        $(document).ready(function () {
            loadSuppliersProducts();
            loadSuppliersTotalSale();
            loadSuppliersSaleThisMonth();
            loadSuppliersSaleLastMonth();
        })
    </script>
}