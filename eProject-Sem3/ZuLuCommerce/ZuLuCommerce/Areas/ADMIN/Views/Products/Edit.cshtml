@model ZuLuCommerce.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupplierId, "SupplierId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Thumbnail, htmlAttributes: new { @class = "control-label col-md-2 " })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Thumbnail, new { htmlAttributes = new { @class = "form-control thumbnail" } })
                @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
                <div>
                    @if (Model.Thumbnail != null)
                    {
                        <img id="thumbnail" style="border:1px solid black; margin:10px 0 10px 0;height:200px" src="~/Uploads/Products/@Model.Id/@Model.Thumbnail" />
                    }
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Images", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @foreach (var pic in Model.Pictures)
                {
                    <div class="col-md-4 images">
                        @{
                            string src = "/Uploads/image-not-available.jpg";//default
                            var p = Model.Pictures.LastOrDefault();
                            if (p != null)
                            {
                                src = "/Uploads/Products/" + Model.Id + "/" + pic.URL;
                            }
                        }
                        <img src="@src" height="100" />
                        <button type="button" class="btnRemovePic" picid="@pic.Id"><span class="glyphicon glyphicon-remove"></span></button>
                        <button type="button" class="btnSetThumbnail" url="@pic.URL" picid="@pic.Id">Set as thumbnail</button>
                    </div>


                            }

            </div>
        </div>
        <div class="form-group">
            @Html.Label("Add Images", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" multiple name="pictures" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                            }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $(".btnRemovePic").click(function () {
                var btn = $(this);
                var picid = btn.attr("picid");
                if (confirm("Are you sure to delete this picture?")) {
                    $.post("/ADMIN/Products/DeletePictures/" + picid, function (response) {
                        if (response == "OK") {
                            btn.parent().remove();
                        }
                        else {
                            alert("Bay roi`!");
                        }
                    });
                }
            });
        });
        $(document).ready(function () {
            $(".btnSetThumbnail").click(function () {
                var btn = $(this);
                var picid = btn.attr("picid");
                var url = btn.attr("url");
                $.post("/ADMIN/Products/SetThumbnail/" + picid, function (response) {
                    if (response == "OK") {
                        $(".thumbnail").val(url);

                        var src = "/Uploads/Products/" +@Model.Id + "/" + url;
                        $("#thumbnail").prop("src", src);
                    }
                    else {
                        alert("Bay roi`!");
                    }
                });
            });
        });
    </script>
}